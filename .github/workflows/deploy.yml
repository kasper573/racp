name: Deploy
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - ".github/workflows/tests.yml"
      - ".github/workflows/e2e.reusable.yml"
env:
  DEPLOY_ENABLED: ${{ secrets.DEPLOY_ENABLED }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENABLED: ${{ secrets.DEPLOY_ENABLED == 'true' }}
      DEPLOY_PATH: /opt/racp
    steps:
      - name: Abort if deploy not enabled
        if: ${{ env.DEPLOY_ENABLED != 'true' }}
        run: exit 1

      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install project dependencies
        run: yarn --prefer-offline

      - name: Build
        env:
          apiBaseUrl: //${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_API_PORT }}
        run: |
          export NODE_ENV=production
          yarn build

      - name: Upload
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete --exclude=node_modules --exclude=.git --exclude=data --exclude=assets --exclude=*.db --exclude=*.db-journal
          remote_path: ${{ env.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USERNAME }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: (Re)start services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}

            # Make sure dependencies are installed on remote machine
            yarn install

            # Create local production env file
            rm -f .env.local
            cat <<EOT >> .env.local
            hostname=${{ secrets.DEPLOY_HOST }}
            apiPort=${{ secrets.DEPLOY_API_PORT }}
            appPort=${{ secrets.DEPLOY_APP_PORT }}
            rAthenaPath=${{ secrets.DEPLOY_RATHENA_PATH }}
            jwtSecret=${{ secrets.DEPLOY_JWT_SECRET }}
            log=verbose
            donationEnvironment=live
            preloadResources=true
            RACP_DATABASE_URL="file:./racp_prod.db"
            EOT

            # Codegen required remotely since generated prisma code is node_modules, which is not uploaded
            chmod -R a+rwX ./node_modules/.prisma
            yarn codegen:prisma

            # Perform migrations
            npx prisma migrate deploy

            pm2 restart ecosystem.config.json
