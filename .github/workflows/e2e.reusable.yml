on:
  workflow_call:
    secrets:
      CYPRESS_PROJECT_ID:
        description: "Cypress project ID"
        required: false
    inputs:
      name:
        description: "Name of test"
        required: true
        type: string
      width:
        description: "Cypress viewport width"
        required: true
        type: number
      height:
        description: "Cypress viewport height"
        required: true
        type: number
jobs:
  run:
    name: ${{ inputs.width}}x${{ inputs.height }}
    runs-on: ubuntu-latest
    container: cypress/included:10.7.0
    services:
      db:
        image: mariadb:latest
        ports: [3306]
        env:
          MYSQL_USER: racp
          MYSQL_PASSWORD: racp
          MYSQL_DATABASE: racp
          MYSQL_ROOT_PASSWORD: racp
          MYSQL_ROOT_HOST: "%"
    env:
      apiPort: 8081
      appPort: 8080
      donationEnvironment: "fake"
      exposeInternalErrors: true
      showDetailsInErrorBoundary: true
      jwtSecret: test
      apiBaseUrl: http://localhost:8081
      CYPRESS_CI: true
      CYPRESS_BASE_URL: http://localhost:8080
      CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install project dependencies
        run: yarn --prefer-offline

      - name: Directory access permissions
        run: |
          chmod -R a+rwX ./node_modules/.prisma
          chmod -R a+rwX ./cypress
          chmod -R a+rwX ./prisma

      - name: Deploy database migrations
        run: yarn db:deploy

      - name: Configure rAthena
        run: yarn configure-rathena
        env:
          MYSQL_PORT: 3306
          MYSQL_HOST: db
          MYSQL_USER: racp
          MYSQL_PASSWORD: racp
          MYSQL_DATABASE: racp

      - name: Build
        run: yarn build
        env:
          NODE_ENV: production

      - name: Run e2e tests
        run: yarn test:e2e
        env:
          NODE_ENV: production
          CYPRESS_VIEWPORT_WIDTH: ${{ inputs.width }}
          CYPRESS_VIEWPORT_HEIGHT: ${{ inputs.height }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: E2E Test Report (${{ inputs.name }})
          path: cypress/reports/**/*.xml
          reporter: java-junit
          fail-on-error: false

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ inputs.name }}
          path: cypress/screenshots

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-${{ inputs.name }}
          path: cypress/videos

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist-${{ inputs.name }}
          path: dist
